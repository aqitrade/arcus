/*
 * Created on 31 Jan 2016 ( Time 11:37:05 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a composite Primary Key  


package com.aqitrade.arcus.data.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "user_preference"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="user_preference", catalog="arcus" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UserPreferenceEntity.countAll", query="SELECT COUNT(x) FROM UserPreferenceEntity x" )
} )
public class UserPreferenceEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
	@EmbeddedId
    private UserPreferenceEntityKey compositePrimaryKey ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="preference_value", nullable=false, length=2000)
    private String     preferenceValue ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="user_id", referencedColumnName="user_id", insertable=false, updatable=false)
    private UserEntity user        ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UserPreferenceEntity() {
		super();
		this.compositePrimaryKey = new UserPreferenceEntityKey();       
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------
    public void setUserId( Long userId ) {
        this.compositePrimaryKey.setUserId( userId ) ;
    }
    public Long getUserId() {
        return this.compositePrimaryKey.getUserId() ;
    }
    public void setPreferenceKey( String preferenceKey ) {
        this.compositePrimaryKey.setPreferenceKey( preferenceKey ) ;
    }
    public String getPreferenceKey() {
        return this.compositePrimaryKey.getPreferenceKey() ;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : preference_value ( VARCHAR ) 
    public void setPreferenceValue( String preferenceValue ) {
        this.preferenceValue = preferenceValue;
    }
    public String getPreferenceValue() {
        return this.preferenceValue;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUser( UserEntity user ) {
        this.user = user;
    }
    public UserEntity getUser() {
        return this.user;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        if ( compositePrimaryKey != null ) {  
            sb.append(compositePrimaryKey.toString());  
        }  
        else {  
            sb.append( "(null-key)" ); 
        }  
        sb.append("]:"); 
        sb.append(preferenceValue);
        return sb.toString(); 
    } 

}
