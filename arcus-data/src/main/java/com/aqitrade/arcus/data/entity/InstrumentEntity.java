/*
 * Created on 3 Feb 2016 ( Time 22:44:46 ) Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite)

package com.aqitrade.arcus.data.entity;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * Persistent class for entity stored in table "instrument"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name = "instrument", catalog = "arcus")
// Define named queries here
@NamedQueries({@NamedQuery(name = "InstrumentEntity.countAll",
    query = "SELECT COUNT(x) FROM InstrumentEntity x")})
public class InstrumentEntity implements Serializable {

  private static final long serialVersionUID = 1L;

  // ----------------------------------------------------------------------
  // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
  // ----------------------------------------------------------------------
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  @Column(name = "instrument_id", nullable = false)
  private Integer instrumentId;


  // ----------------------------------------------------------------------
  // ENTITY DATA FIELDS
  // ----------------------------------------------------------------------
  @Column(name = "symbol", nullable = false, length = 45)
  private String symbol;

  @Column(name = "name", nullable = false, length = 65)
  private String name;

  @Column(name = "price", nullable = false)
  private Double price;

  @Column(name = "volume", nullable = false)
  private Long volume;

  @Column(name = "open_price", nullable = false)
  private Double openPrice;

  @Column(name = "close_price", nullable = false)
  private Double closePrice;

  @Column(name = "high_price", nullable = false)
  private Double highPrice;

  @Column(name = "low_price", nullable = false)
  private Double lowPrice;

  @Column(name = "high_limit", nullable = false)
  private Double highLimit;

  @Column(name = "low_limit", nullable = false)
  private Double lowLimit;

  @Column(name = "type", nullable = false, length = 6)
  private String type;

  @Column(name = "margin_rate", nullable = false)
  private Double marginRate;

  @Column(name = "commission_rate", nullable = false)
  private Double commissionRate;

  @Column(name = "settlement_price", nullable = false)
  private Double settlementPrice;

  @Column(name = "unit_size", nullable = false)
  private Long unitSize;

  @Column(name = "bid", nullable = false)
  private Double bid;

  @Column(name = "ask", nullable = false)
  private Double ask;

  @Column(name = "exchange_id", nullable = false, length = 45)
  private String exchangeId;


  // ----------------------------------------------------------------------
  // CONSTRUCTOR(S)
  // ----------------------------------------------------------------------
  public InstrumentEntity() {
    super();
  }

  // ----------------------------------------------------------------------
  // GETTER & SETTER FOR THE KEY FIELD
  // ----------------------------------------------------------------------
  public void setInstrumentId(Integer instrumentId) {
    this.instrumentId = instrumentId;
  }

  public Integer getInstrumentId() {
    return this.instrumentId;
  }

  // ----------------------------------------------------------------------
  // GETTERS & SETTERS FOR FIELDS
  // ----------------------------------------------------------------------
  // --- DATABASE MAPPING : symbol ( VARCHAR )
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public String getSymbol() {
    return this.symbol;
  }

  // --- DATABASE MAPPING : name ( VARCHAR )
  public void setName(String name) {
    this.name = name;
  }

  public String getName() {
    return this.name;
  }

  // --- DATABASE MAPPING : price ( DOUBLE )
  public void setPrice(Double price) {
    this.price = price;
  }

  public Double getPrice() {
    return this.price;
  }

  // --- DATABASE MAPPING : volume ( BIGINT )
  public void setVolume(Long volume) {
    this.volume = volume;
  }

  public Long getVolume() {
    return this.volume;
  }

  // --- DATABASE MAPPING : open_price ( DOUBLE )
  public void setOpenPrice(Double openPrice) {
    this.openPrice = openPrice;
  }

  public Double getOpenPrice() {
    return this.openPrice;
  }

  // --- DATABASE MAPPING : close_price ( DOUBLE )
  public void setClosePrice(Double closePrice) {
    this.closePrice = closePrice;
  }

  public Double getClosePrice() {
    return this.closePrice;
  }

  // --- DATABASE MAPPING : high_price ( DOUBLE )
  public void setHighPrice(Double highPrice) {
    this.highPrice = highPrice;
  }

  public Double getHighPrice() {
    return this.highPrice;
  }

  // --- DATABASE MAPPING : low_price ( DOUBLE )
  public void setLowPrice(Double lowPrice) {
    this.lowPrice = lowPrice;
  }

  public Double getLowPrice() {
    return this.lowPrice;
  }

  // --- DATABASE MAPPING : high_limit ( DOUBLE )
  public void setHighLimit(Double highLimit) {
    this.highLimit = highLimit;
  }

  public Double getHighLimit() {
    return this.highLimit;
  }

  // --- DATABASE MAPPING : low_limit ( DOUBLE )
  public void setLowLimit(Double lowLimit) {
    this.lowLimit = lowLimit;
  }

  public Double getLowLimit() {
    return this.lowLimit;
  }

  // --- DATABASE MAPPING : type ( ENUM )
  public void setType(String type) {
    this.type = type;
  }

  public String getType() {
    return this.type;
  }

  // --- DATABASE MAPPING : margin_rate ( DOUBLE )
  public void setMarginRate(Double marginRate) {
    this.marginRate = marginRate;
  }

  public Double getMarginRate() {
    return this.marginRate;
  }

  // --- DATABASE MAPPING : commission_rate ( DOUBLE )
  public void setCommissionRate(Double commissionRate) {
    this.commissionRate = commissionRate;
  }

  public Double getCommissionRate() {
    return this.commissionRate;
  }

  // --- DATABASE MAPPING : settlement_price ( DOUBLE )
  public void setSettlementPrice(Double settlementPrice) {
    this.settlementPrice = settlementPrice;
  }

  public Double getSettlementPrice() {
    return this.settlementPrice;
  }

  // --- DATABASE MAPPING : unit_size ( BIGINT )
  public void setUnitSize(Long unitSize) {
    this.unitSize = unitSize;
  }

  public Long getUnitSize() {
    return this.unitSize;
  }

  // --- DATABASE MAPPING : bid ( DOUBLE )
  public void setBid(Double bid) {
    this.bid = bid;
  }

  public Double getBid() {
    return this.bid;
  }

  // --- DATABASE MAPPING : ask ( DOUBLE )
  public void setAsk(Double ask) {
    this.ask = ask;
  }

  public Double getAsk() {
    return this.ask;
  }

  // --- DATABASE MAPPING : exchange_id ( VARCHAR )
  public void setExchangeId(String exchangeId) {
    this.exchangeId = exchangeId;
  }

  public String getExchangeId() {
    return this.exchangeId;
  }

  // ----------------------------------------------------------------------
  // toString METHOD
  // ----------------------------------------------------------------------
  public String toString() {
    StringBuffer sb = new StringBuffer();
    sb.append("[");
    sb.append(instrumentId);
    sb.append("]:");
    sb.append(symbol);
    sb.append("|");
    sb.append(name);
    sb.append("|");
    sb.append(price);
    sb.append("|");
    sb.append(volume);
    sb.append("|");
    sb.append(openPrice);
    sb.append("|");
    sb.append(closePrice);
    sb.append("|");
    sb.append(highPrice);
    sb.append("|");
    sb.append(lowPrice);
    sb.append("|");
    sb.append(highLimit);
    sb.append("|");
    sb.append(lowLimit);
    sb.append("|");
    sb.append(type);
    sb.append("|");
    sb.append(marginRate);
    sb.append("|");
    sb.append(commissionRate);
    sb.append("|");
    sb.append(settlementPrice);
    sb.append("|");
    sb.append(unitSize);
    sb.append("|");
    sb.append(bid);
    sb.append("|");
    sb.append(ask);
    sb.append("|");
    sb.append(exchangeId);
    return sb.toString();
  }

}
